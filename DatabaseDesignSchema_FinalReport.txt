
This file is the final draft for the Relational Schema for our database design. 
This is for our Final Report.
It will cover all tables, constraints, and necessary assumptions/deviations from standard assumptions.
This will highlight was has changed from the last Milestone, Milestone 3. To see changes from previous Milestones, please check the file DatabaseDesignSchema_Milestone3.txt.

OLD: 
User(uid, email, full_name, address, password, balance)

key: uid

NEW:

User(uid, email, firstname, lastname, address, password, balance)

key: uid

REASON: We separated the full name variable to firstname and lastname so that it was easier referencing the users first name only when doing the welcome messaging.


UNCHANGED:

Sellers(uid, seller)

key: uid


UNCHANGED:
Products(product_id, seller_id, product_name, category, description, image, price, available, quantity)

key: product_id


OLD:

Carts(uid, product_id, quantity)

key: uid, product_id

Restriction: Users can only access, add, and remove items from their own cart_id

NEW:

Carts(uid, product_id, quantity)

key: uid, product_id

Restriction: Users can only access, add, and remove items from their own uid

REASON:
Switched name of variable from cart_id to uid

NEWLY ADDED:
Wishlist(uid, product_id)

key: uid, product_id

Restriction: Users can only access, add, and remove items from their own Wishlist. Users can add items from wishlist to cart.


OLD:

orders(order_id, product_id, seller_id, uid, address, order_time, quantity, fulfillment, fulfillment_time, price)

key:order_id

Restrictions: Non-sellers can only access the previous orders of their own uid, Sellers can access orders that have their uid OR seller_id, fulfillment_time must be later than order_time

NEW:

orders(order_id, superorder_id, product_id, seller_id, uid, address, order_time, quantity, fulfillment, fulfillment_time, price)

key:order_id

Restrictions: Non-sellers can only access the previous orders of their own uid, Sellers can access orders that have their uid OR seller_id, fulfillment_time must be later than order_time

REASON: We added a new variable called superorder_id. This represents simultaneously ordered line items. Because we want to be able to display entire orders in a user's purchase history, we added this features. For example, if we ordered a banana and an apple, they would each have different order ids, but the same superorder_id.


OLD:
products_reviews(product_id, uid, review, review_time)

key:uid, product_id

This is because users can only submit one review for each product. Therefore the user is unique and a key.

Restrictions: User must have bought product, only allow users to submit one review for each product.

NEW:
products_reviews(product_id, uid, review, review_time, rating)

key:uid, product_id

This is because users can only submit one review for each product. Therefore the user is unique and a key.

Restrictions: User must have bought product, only allow users to submit one review for each product. Rating must be an integer between 1 and 5.

REASON: The attribute rating was added so shoppers could give a rating for the product review, and product reviews could be sorted/filtered by rating.


OLD:

sellers_reviews(seller_id, reviewer_id, review, review_time)

key:reviewer_id, seller_id

This is because users can only submit one review for each seller. Therefore the user is unique and a key.

Restriction: User can only place review if they have bought from Seller, can only place one review.

NEW:

sellers_reviews(seller_id, reviewer_id, review, review_time, rating)

key:reviewer_id, seller_id

This is because users can only submit one review for each seller. Therefore the user is unique and a key.

Restrictions: User can only place review if they have bought from Seller, can only place one review.Rating must be an integer between 1 and 5.

REASON: The attribute rating was added so shoppers could give a rating for the seller review, and seller reviews could be sorted/filtered by rating.
